--Type of Triangle
SELECT
  CASE
    WHEN A = B AND B = C then 'Equilateral'
    WHEN A + B <= C then 'Not A Triangle'
    WHEN A + C <= B then 'Not A Triangle'
    WHEN B + C <= A then 'Not A Triangle'
    WHEN A = B AND A <> C then 'Isosceles'
    WHEN A = C AND A <> B then 'Isosceles'
    WHEN B = C AND A <> B then 'Isosceles'
    ELSE 'Scalene'
  END
FROM triangles;

--The PADS
SELECT NAME || '('||SUBSTR(OCCUPATION,1,1)|| ')' FROM OCCUPATIONS ORDER BY NAME;
SELECT 'There are a total of '||OCCUPATION_COUNT ||' '|| LOWER(OCCUPATION)||'s.' FROM (SELECT COUNT(OCCUPATION) OCCUPATION_COUNT, OCCUPATION FROM OCCUPATIONS GROUP BY OCCUPATION) ORDER BY OCCUPATION_COUNT,OCCUPATION;

--Occupations
SELECT Doctor,Professor,Singer,Actor FROM (SELECT ROW_NUMBER() OVER (PARTITION BY occupation ORDER BY name) as RN,NAME,OCCUPATION FROM OCCUPATIONS) PIVOT(MAX(NAME) FOR OCCUPATION IN ('Doctor' AS Doctor, 'Professor' AS Professor , 'Singer' AS Singer , 'Actor' AS Actor)) ORDER BY RN;

--Binary Tree Nodes
SELECT N, CASE  
            WHEN P IS NULL THEN 'Root'
            WHEN (SELECT COUNT(P) FROM BST WHERE P=N)
          END 
FROM BST ORDER BY N;

--New Companies
SELECT C.COMPANY_CODE, C.FOUNDER, LM.CNT_LM, SM.CNT_SM, M.CNT_M, E.CNT_EMP 
FROM COMPANY C,
(SELECT COMPANY_CODE,COUNT(DISTINCT LEAD_MANAGER_CODE) CNT_LM FROM Lead_Manager GROUP BY COMPANY_CODE) LM, 
(SELECT COMPANY_CODE,COUNT(DISTINCT SENIOR_MANAGER_CODE) CNT_SM FROM Senior_Manager GROUP BY COMPANY_CODE) SM, 
(SELECT COMPANY_CODE,COUNT(DISTINCT MANAGER_CODE) CNT_M FROM Manager GROUP BY COMPANY_CODE ) M, 
(SELECT COMPANY_CODE,COUNT(DISTINCT EMPLOYEE_CODE) CNT_EMP FROM Employee GROUP BY COMPANY_CODE ) E
WHERE C.COMPANY_CODE = LM.COMPANY_CODE
AND C.COMPANY_CODE = SM.COMPANY_CODE
AND C.COMPANY_CODE = M.COMPANY_CODE
AND C.COMPANY_CODE = E.COMPANY_CODE
ORDER BY C.COMPANY_CODE;